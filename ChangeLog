                   selenium-client gem ChangeLog
                   =============================

1.2.17 (2009-09-29)
===================

 - Upgraded RSpec support to 1.2.8

 - Fixed bug in with timeouts specified as a string (SRC-692)
   (http://github.com/ph7/selenium-client/issues#issue/5)

 - Fix escaping bug when dealing with embedded regexes such as
   "webratlink=evalregex:/Pastry Lovers \\(Organizer\\)/"
   Thank you Frederik Fix

1.2.16 (2009-06-21)
===================

 - Upgraded Selenium RC support to 1.0.1 (official release)

 - Changed default Selenium RC shutdown command to `shutDownSeleniumServer`
   per Selenium RC 1.0 changes breaking backward compatibility :-(
   Shutdown method can be overriden when defining the rake task, e.g.

    Selenium::Rake::RemoteControlStopTask.new do |rc|
      rc.shutdown_method = "shutDown"
    end

 - Ruby 1.9.1 compatibility
 
 - Added support for turning on/off automatic hightlighting of the element 
   driven or inspected by Selenium. Useful when recording videos. Thank
   you Aaron Tinio. See the `highlight_located_element` option when
   creating the driver and the `highlight_located_element=` method on
   the driver for more details.
 

1.2.15 (2009-05-13)
===================

 - Upgraded RSpec support to 1.2.6

 - Fixed method_missing in selenium_helper to only delegate to methods 
   that @selenium responds to. Thank you Paul Boone.
   
 - If you do not explicitly specify the path to selenium remote control jar
   it will be "auto-discovered" in `vendor` directory using the following
   path : `vendor/selenium-remote-control/selenium-server*-standalone.jar`

 - Added the ability to redirect output to a log file, when
   launching Selenium Remote Control with the Rake task.
   Thank you Adam Greene.

 - Fixed screenshot capture under Windows (i.e. Corrupted image files).
   Thank you Aaron Tinio.

   
 - Do not capture system state on execution errors that do not indicate an 
   actual failure (ExamplePendingError , PendingExampleFixedError, 
   NoDescriptionError). Thank you Aaron Tinio.
 
 - No system capture error messages when running Selenium RSpec examples
   from TextMate (Default report file path to a temporary file).

 - Added support for `browser_network_traffic` method which returns a string
   representation of the network traffic seen by the browser (in XML, JSON or
   pain text format), including headers, AJAX requests, status codes, and
   timings. When this function is called, the traffic log is cleared, so the
   returned content is only the traffic seen since the last call.

 - Added support for browser session specific options when starting a new 
   session (used to trigger capture of browser network traffic). 

 - Added a more idiomatic `browser_xpath_library=` method to
   use a custom xpath library for browser-side xpath evaluations.
 
1.2.14 (2009-03-08)
===================

 - Fixing packaging problem
 - Removed warnings when running unit tests

1.2.13 (2009-03-05)
===================

 - Patch for incremental calls to `wait_for_text` (Thank you Rick Lee-Morlang)

 - Regular expression support in `wait_for_text` (Thank you Rick Lee-Morlang)

    click "a_locator", :wait_for => :text, :text => /Some.*ing/

 - Set read and open timeout on HTTP connection to Remote Control
  
1.2.12 (2009-02-28)
===================

 - Packaging generated driver that was left out in 1.2.11 packaging

1.2.11 (2009-02-27)
===================

 - More idiomatic hash-based constructor for the client driver:

    Selenium::Client::Driver.new \
      :host => "localhost",
      :port => 4444,
      :browser => "*firefox",
      :timeout_in_seconds => 10,
      :url => "http://localhost:3000"
    
 - Added jQuery support for wait_for_ajax
 
 - Can set default javascript framework semantics when creating the
   client driver:

   Selenium::Client::Driver.new \
     :host => "localhost",
     :port => 4444,
     :browser => "*firefox",
     :timeout_in_seconds => 10,
     :url => "http://localhost:3000",
     :javascript_framework => :jquery

 - Can override default javascript framework semantics on a specific
   API call:

   driver.click "a-button" , :wait_for => :ajax, :javascript_framework => :jquery

 - Added new wait_for semantic: `:value` and `:no_value`:

    click :wait_for => :value, :element => 'a_locator', :value => 'some value'    # will wait for the field value of 'a_locator' to be 'some value'
    click :wait_for => :no_value, :element => 'a_locator', :value => 'some value' # will wait for the field value of 'a_locator' to not be 'some value'

 - Include examples in RubyGem
 - Added visible? method
 - Wait for complete shutdown when stopping Selenium RC with
   "rake selenium:rc:stop" (Thanks Aaron Tinio for the patch)
 - Fixed integration build on Windows
 - Support locator including single quotes in wait_for_xyz methods
   (Thanks Aaron Tinio for the patch)
 - Fixed various bugs in wait_for_xyz methods
 - API tests now rely on a demo application for integration testing of
   wait_for_xyz methods


1.2.10 (2009-02-02)
===================

 - Upgraded RSpec support to 1.1.12

 - Added popup support in wait_for semantics. e.g.

    click 'my_button', :wait_for => :popup, :window => 'a window id'
 
 - Fixed :wait_for => :text and :wait_for => :no_text semantics
   Thank you Wade Catron for finding the reporting this bug!
   
   The new semantics are:
   
   If you do not provide any locator the text is searched in the entire
   body of the page. e.g.
   
    click 'my_button', :wait_for => :text, :text => "Congratulations"
     
   If you provide and element locator the text search is scoped to the 
   innerHTML of that element. e.g.

    click 'my_button', :wait_for => :text, :element => "notification_box", :text => "Preferences Saved!"
    
  *** WARNING ****
  
    In the process I had to change the signature of the wait_for_text and
    wait_for_no_text methods. Please update your code if you were using
    directly any of these 2 methods:
    
    OLD:  wait_for_text(locator, text, timeout_in_seconds=nil)	  
    NEW:  wait_for_text(text, locator=nil, timeout_in_seconds=nil)

    OLD:  wait_for_no_text(locator, text, timeout_in_seconds=nil)	  
    NEW:  wait_for_no_text(text, locator=nil, timeout_in_seconds=nil)

 - More idiomatic methods to retrieves all window ids, names and titles:
       .all_window_ids, .all_window_names, all_window_titles
 
 - RSpec Helper automatically set context when starting a new test
   (lib/selenium/rspec/spec_helper)
	  
1.2.9 (2008-11-04)
==================

 - Upgraded RSpec support to 1.1.11
 - Explicit gem versions in examples and README
 
1.2.6 (2008-10-03)
==================

  - Upgraded RSpec support to 1.1.8
  
1.2.5 (2008-10-01)
==================

  - Fixing reporting with DeepTest+RSpec
  
1.2.4 (2008-09-30)
==================

  - Bug fix release

1.2.3 (2008-09-29)
==================

  - Friendlier namespace to coexist with the selenium gem
  
1.2.2 (2008-09-29)
==================

 - Bug fix release

1.2.1 (2008-09-28)
==================

 - Bug fix release
 
1.1 (2008-07-16)
================

 - More idiomatic client API (work in progress)
 
1.0 (2008-04-14)
================

 - Standlone gem packaging
 - Allows stop to be called when no session were started
